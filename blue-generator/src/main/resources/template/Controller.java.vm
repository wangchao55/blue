package ${package}.${moduleName}.controller;

import java.util.Arrays;
import java.util.Map;

import com.sky.cold.common.rest.responses.SuccessResponses;
import com.sky.cold.common.rest.controller.SuperController;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.service.${className}Service;



/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${moduleName}/${pathName}")
@Api(tags = "${comments}管理")
public class ${className}Controller extends SuperController {
    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @ApiOperation(value = "列表查询", notes = "列表查询")
    @GetMapping("/list")
    public SuccessResponses list(@RequestParam Map<String, Object> params){
        Object page = ${classname}Service.list();

        return success(page);
    }


    /**
     * 信息
     */
    @ApiOperation(value = "通过id查询")
    @GetMapping("/info/{${pk.attrname}}")
    public SuccessResponses info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
		${className} ${classname} = ${classname}Service.getById(${pk.attrname});

        return success(${classname});
    }

    /**
     * 保存
     */
    @ApiOperation(value = "新增${comments}")
    @PostMapping("/save")
    public SuccessResponses save(@RequestBody ${className} ${classname}){
		${classname}Service.save(${classname});

        return success();
    }

    /**
     * 修改
     */
    @ApiOperation(value = "修改${comments}")
    @PutMapping("/update")
    public SuccessResponses update(@RequestBody ${className} ${classname}){
		${classname}Service.updateById(${classname});

        return success();
    }

    /**
     * 删除
     */
    @ApiOperation(value = "通过id删除${comments}")
    @DeleteMapping("/delete")
    public SuccessResponses delete(@RequestBody ${pk.attrType}[] ${pk.attrname}s){
		${classname}Service.removeByIds(Arrays.asList(${pk.attrname}s));

        return success();
    }

}
